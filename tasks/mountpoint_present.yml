---

- name: 'oiofs: Setup SDS namespace configuration if not already present'
  template:
    src: "sds_ns.cfg.j2"
    dest: "{{ openio_sds_conf_directory }}/{{ mountpoint.namespace | default(oiofs_mountpoint_default_namespace) }}"
    force: false
    owner: '{{ openio_oiofs_cfg_user }}'
    group: '{{ openio_oiofs_cfg_group }}'
    mode: 0644

- name: 'oiofs: Setup oiofs configuration'
  template:
    src: "oiofs.cfg.j2"
    dest: "{{ openio_oiofs_conf_directory }}/{{ mountpoint_id }}.json"
    owner: '{{ openio_oiofs_cfg_user }}'
    group: '{{ openio_oiofs_cfg_group }}'
    mode: 0644

- name: "oiofs: Create the filesystem inside container"
  shell: "mkfs.oiofs -C {{ openio_oiofs_conf_directory }}/{{ mountpoint_id }}.json -v {% if mountpoint.force_mkfs | default(oiofs_mountpoint_default_force_mkfs) %} -f {% endif %} -u {{ mountpoint.user | default(oiofs_mountpoint_default_user) }} -g {{ mountpoint.group | default(oiofs_mountpoint_default_group) }} -m {{ mountpoint.mode | default(oiofs_mountpoint_default_mode) }} {{ mountpoint.namespace | default(oiofs_mountpoint_default_namespace) }}/{{ mountpoint.account | default(oiofs_mountpoint_default_account) }}/{{ mountpoint.container | default(oiofs_mountpoint_default_container) }}"

- name: 'oiofs: Ensure OpenIO oiofs mountpoint directory exists'
  file:
    path: "{{ mountpoint.path }}"
    owner: root
    group: root
    state: directory
    mode: 0750

- name: 'oiofs: Ensure oiofs cache directory exists'
  file:
    path: "{{ mountpoint.cache_directory }}"
    owner: root
    group: root
    state: directory
    mode: 0750

- name: 'oiofs: Ensure oiofs cache recovery directory exists'
  file:
    path: "{{ mountpoint.recovery_cache_directory }}"
    owner: root
    group: root
    state: directory
    mode: 0750
  when: mountpoint.recovery_cache_directory is defined

- name: 'oiofs: Setup mountpoint as a gridinit service'
  include_role:
    name: gridinit
  vars:
    - openio_gridinit_services:
        - name: "oiofs-{{ mountpoint_id }}"
          namespace: "{{ mountpoint.namespace | default(oiofs_mountpoint_default_namespace) }}"
          state: 'present'
          type: oiofs
          configuration:
            command: "oiofs-fuse -f {% for opt in (mountpoint.fuse_options | default(oiofs_mountpoint_default_fuse_options)) %} -o {{ opt }} {% endfor %} {% for flag in (mountpoint.fuse_flags | default(oiofs_mountpoint_default_fuse_flags)) %} {{ flag }} {% endfor %} --oiofs-config {{ openio_oiofs_conf_directory }}/{{ mountpoint_id }}.json --cache-action {{ mountpoint.cache_action | default(oiofs_mountpoint_default_cache_action) }} --oiofs-user-url {{ mountpoint.namespace | default(oiofs_mountpoint_default_namespace) }}/{{ mountpoint.account | default(oiofs_mountpoint_default_account) }}/{{ mountpoint.container | default(oiofs_mountpoint_default_container) }} {{ mountpoint.path }}"
            enabled: true
            start_at_boot: '{{ mountpoint.start_at_boot | default(oiofs_mountpoint_default_start_at_boot) }}'
            on_die: respawn
            uid: "{{ mountpoint.user | default(oiofs_mountpoint_default_user) }}"
            gid: "{{ mountpoint.group | default(oiofs_mountpoint_default_group) }}"
            env_PATH: "/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin"

...
